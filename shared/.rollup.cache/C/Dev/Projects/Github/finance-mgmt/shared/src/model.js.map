{"version":3,"file":"model.js","sourceRoot":"","sources":["model.ts"],"names":[],"mappings":"","sourcesContent":["import { Types } from \"mongoose\";\r\n\r\nexport type TransactionSource = 'import' | 'manual'\r\n\r\n\r\nexport interface ITransaction {\r\n    _id: Types.ObjectId,\r\n    account?: string,\r\n    date: Date,\r\n    amount: number,\r\n    transactionMessage?: string,\r\n    receiverOrSender?: string,\r\n    imported: Date,\r\n    source: TransactionSource,\r\n    importId: string,\r\n    tags?: string[]\r\n}\r\n\r\n\r\nexport type PrintableITransaction = Omit<ITransaction, 'date' | 'imported' | 'amount'> \r\n    & { date: string, imported: string, amount: string, isPositive: boolean }\r\n\r\n\r\n/* AccountSnapshot */\r\n\r\nexport interface IAccountSnapshot {\r\n    _id: Types.ObjectId,\r\n    account: string,\r\n    date: Date,\r\n    balance: number,\r\n    imported: Date,\r\n    source: TransactionSource,\r\n    importId: string,\r\n    rawImportData?: string | Buffer\r\n}\r\n\r\n\r\nexport interface IAccount {\r\n    _id: string,\r\n    bank: string,\r\n    name: string,\r\n    type?: string,\r\n    lastSnapshot?: Types.ObjectId,\r\n    metadata?: { color: string } & Record<string, any>\r\n}\r\n\r\n\r\nexport type ParseFunc = (rawCsv: string, importId: string) => Promise<StagedImport>\r\n\r\nexport interface StagedImport {\r\n    // contains bank and id\r\n    snapshot: IAccountSnapshot,\r\n    newTransactions: ITransaction[]\r\n    duplicateTransactions: ITransaction[]\r\n}\r\n\r\nexport type FinishedImport = Omit<StagedImport, 'duplicateTransactions'>"]}